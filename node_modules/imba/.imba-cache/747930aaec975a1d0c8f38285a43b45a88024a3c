{"id":"cd","warnings":[],"errors":[],"js":"function iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };\nimport {register$} from 'imba/runtime';\nconst $width$ = Symbol.for('#width'), $height$ = Symbol.for('#height'), $extendType$ = Symbol.for('#extendType');\n\n/*body*/\n// imba$imbaPath=global\n// imba$stdlib=1\nimport {Event,CustomEvent,Element} from '../dom/core';\nimport * as helpers from './helpers';\n\nexport function use_events_resize(){\n\tglobalThis.imba.uses_events_resize = true;\n\treturn true;\n};\n\nlet resizeObserver = null;\n\n\nlet c$0 = Symbol();\nclass ResizeEvent extends CustomEvent {\n\tαcss(wunit = '1elw',hunit = '1elh',sel = '',unit = ''){\n\t\tconst target = this.entry?.target;\n\t\t\n\t\tif (sel == 'px') {\n\t\t\tunit = sel;\n\t\t\tsel = '';\n\t\t};\n\t\t\n\t\tif (target && target.offsetParent) {\n\t\t\tlet wu = helpers.parseDimension(wunit);\n\t\t\tlet hu = helpers.parseDimension(hunit);\n\t\t\tlet el = helpers.toElement(sel,target);\n\t\t\t\n\t\t\tlet wp = wu ? ((\"--u_\" + (wu[1]))) : ((\"--\" + wunit));\n\t\t\tlet hp = hu ? ((\"--u_\" + (hu[1]))) : ((\"--\" + hunit));\n\t\t\t\n\t\t\tlet wval = wu ? ((this.width / wu[0])) : this.width;\n\t\t\tlet hval = hu ? ((this.height / hu[0])) : this.height;\n\t\t\t\n\t\t\tel.style.setProperty(wp,wval + unit);\n\t\t\tel.style.setProperty(hp,hval + unit);\n\t\t};\n\t\t\n\t\treturn true;\n\t}\n\t\n\tget width(){\n\t\treturn this[$width$] ??= this.entry.target.offsetWidth;\n\t}\n\t\n\tget height(){\n\t\treturn this[$height$] ??= this.entry.target.offsetHeight;\n\t}\n\tstatic { register$(this,c$0,'ResizeEvent',0) }\n};\n\nfunction getResizeObserver(){\n\tif (!(globalThis.ResizeObserver)) {\n\t\tif (!(resizeObserver)) {\n\t\t\tconsole.warn(':resize not supported in this browser');\n\t\t\tresizeObserver = {observe: function() { return true; }};\n\t\t};\n\t};\n\t\n\treturn globalThis.imbaResizeObserver = resizeObserver ||= new ResizeObserver(function(entries) {\n\t\t// console.warn('resized',entries)\n\t\t\t\t// setTimeout(&,0) do\n\t\tfor (let $1 = 0, $2 = iter$__(entries), $3 = $2.length; $1 < $3; $1++) {\n\t\t\tlet entry = $2[$1];\n\t\t\tlet e = new CustomEvent('resize',{bubbles: false,detail: entry});\n\t\t\te.entry = entry;\n\t\t\te.rect = entry.contentRect;\n\t\t\te[$extendType$](ResizeEvent);\n\t\t\tentry.target.dispatchEvent(e);\n\t\t\t\n\t\t\tlet e2 = new CustomEvent('resized',{bubbles: true,detail: entry});\n\t\t\tentry.target.dispatchEvent(e2);\n\t\t};\n\t\treturn;\n\t\t// TODO Add modifier for only triggering when element is attached.\n\t\t// resize triggers by default with w/h 0 when element is removed.\n\t});\n};\n\nlet c$1 = Symbol();\nclass ΩElement {\n\ton$resize(chain,context,handler,o){\n\t\t// Are references kept here?\n\t\tlet observer = getResizeObserver();\n\t\tobserver.observe(this);\n\t\t// oh, should we not remove the listener on unmount?!\n\t\tthis.addEventListener('resize',handler,o);\n\t\treturn handler;\n\t}\n\tstatic { register$(this,c$1,'Element',1,Element); }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLmltYmEiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyZXNpemUuaW1iYSJdLCJzb3VyY2VzQ29udGVudCI6WyIjIGltYmEkaW1iYVBhdGg9Z2xvYmFsXG4jIGltYmEkc3RkbGliPTFcbmltcG9ydCB7RXZlbnQsQ3VzdG9tRXZlbnQsRWxlbWVudH0gZnJvbSAnLi4vZG9tL2NvcmUnXG5pbXBvcnQgKiBhcyBoZWxwZXJzIGZyb20gJy4vaGVscGVycydcblxuZXhwb3J0IGRlZiB1c2VfZXZlbnRzX3Jlc2l6ZVxuXHRnbG9iYWwuaW1iYS51c2VzX2V2ZW50c19yZXNpemUgPSB5ZXNcblx0eWVzXG5cbmxldCByZXNpemVPYnNlcnZlciA9IG51bGxcblxuXG5jbGFzcyBSZXNpemVFdmVudCA8IEN1c3RvbUV2ZW50XG5cdGRlZiBAY3NzIHd1bml0ID0gJzFlbHcnLCBodW5pdCA9ICcxZWxoJywgc2VsID0gJycsIHVuaXQgPSAnJ1xuXHRcdGNvbnN0IHRhcmdldCA9IGVudHJ5Li50YXJnZXRcblxuXHRcdGlmIHNlbCA9PSAncHgnXG5cdFx0XHR1bml0ID0gc2VsXG5cdFx0XHRzZWwgPSAnJ1xuXG5cdFx0aWYgdGFyZ2V0IGFuZCB0YXJnZXQub2Zmc2V0UGFyZW50XG5cdFx0XHRsZXQgd3UgPSBoZWxwZXJzLnBhcnNlRGltZW5zaW9uKHd1bml0KVxuXHRcdFx0bGV0IGh1ID0gaGVscGVycy5wYXJzZURpbWVuc2lvbihodW5pdClcblx0XHRcdGxldCBlbCA9IGhlbHBlcnMudG9FbGVtZW50KHNlbCx0YXJnZXQpXG5cblx0XHRcdGxldCB3cCA9IHd1ID8gXCItLXVfe3d1WzFdfVwiIDogXCItLXt3dW5pdH1cIlxuXHRcdFx0bGV0IGhwID0gaHUgPyBcIi0tdV97aHVbMV19XCIgOiBcIi0te2h1bml0fVwiXG5cblx0XHRcdGxldCB3dmFsID0gd3UgPyAoc2VsZi53aWR0aCAvIHd1WzBdKSA6IHNlbGYud2lkdGhcblx0XHRcdGxldCBodmFsID0gaHUgPyAoc2VsZi5oZWlnaHQgLyBodVswXSkgOiBzZWxmLmhlaWdodFxuXG5cdFx0XHRlbC5zdHlsZS5zZXRQcm9wZXJ0eSh3cCx3dmFsICsgdW5pdClcblx0XHRcdGVsLnN0eWxlLnNldFByb3BlcnR5KGhwLGh2YWwgKyB1bml0KVxuXG5cdFx0cmV0dXJuIHllc1xuXG5cdGdldCB3aWR0aFxuXHRcdCN3aWR0aCA/Pz0gZW50cnkudGFyZ2V0Lm9mZnNldFdpZHRoXG5cblx0Z2V0IGhlaWdodFxuXHRcdCNoZWlnaHQgPz89IGVudHJ5LnRhcmdldC5vZmZzZXRIZWlnaHRcblxuZGVmIGdldFJlc2l6ZU9ic2VydmVyXG5cdHVubGVzcyBnbG9iYWwuUmVzaXplT2JzZXJ2ZXJcblx0XHR1bmxlc3MgcmVzaXplT2JzZXJ2ZXJcblx0XHRcdGNvbnNvbGUud2FybignOnJlc2l6ZSBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlcicpXG5cdFx0XHRyZXNpemVPYnNlcnZlciA9IHtvYnNlcnZlOiAoZG8geWVzKX1cblxuXHRnbG9iYWwuaW1iYVJlc2l6ZU9ic2VydmVyID0gcmVzaXplT2JzZXJ2ZXIgfHw9IG5ldyBSZXNpemVPYnNlcnZlciBkbyhlbnRyaWVzKVxuXHRcdCMgY29uc29sZS53YXJuKCdyZXNpemVkJyxlbnRyaWVzKVxuXHRcdCMgc2V0VGltZW91dCgmLDApIGRvXG5cdFx0Zm9yIGVudHJ5IGluIGVudHJpZXNcblx0XHRcdGxldCBlID0gbmV3IEN1c3RvbUV2ZW50KCdyZXNpemUnLCBidWJibGVzOiBmYWxzZSwgZGV0YWlsOiBlbnRyeSlcblx0XHRcdGUuZW50cnkgPSBlbnRyeVxuXHRcdFx0ZS5yZWN0ID0gZW50cnkuY29udGVudFJlY3Rcblx0XHRcdGUuI2V4dGVuZFR5cGUoUmVzaXplRXZlbnQpXG5cdFx0XHRlbnRyeS50YXJnZXQuZGlzcGF0Y2hFdmVudChlKVxuXG5cdFx0XHRsZXQgZTIgPSBuZXcgQ3VzdG9tRXZlbnQoJ3Jlc2l6ZWQnLCBidWJibGVzOiB0cnVlLCBkZXRhaWw6IGVudHJ5KVxuXHRcdFx0ZW50cnkudGFyZ2V0LmRpc3BhdGNoRXZlbnQoZTIpXG5cdFx0cmV0dXJuXG4jIFRPRE8gQWRkIG1vZGlmaWVyIGZvciBvbmx5IHRyaWdnZXJpbmcgd2hlbiBlbGVtZW50IGlzIGF0dGFjaGVkLlxuIyByZXNpemUgdHJpZ2dlcnMgYnkgZGVmYXVsdCB3aXRoIHcvaCAwIHdoZW4gZWxlbWVudCBpcyByZW1vdmVkLlxuXG5leHRlbmQgY2xhc3MgRWxlbWVudFxuXHRkZWYgb24kcmVzaXplKGNoYWluLCBjb250ZXh0LCBoYW5kbGVyLG8pXG5cdFx0IyBBcmUgcmVmZXJlbmNlcyBrZXB0IGhlcmU/XG5cdFx0bGV0IG9ic2VydmVyID0gZ2V0UmVzaXplT2JzZXJ2ZXIhXG5cdFx0b2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzKVxuXHRcdCMgb2gsIHNob3VsZCB3ZSBub3QgcmVtb3ZlIHRoZSBsaXN0ZW5lciBvbiB1bm1vdW50PyFcblx0XHRzZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsaGFuZGxlcixvKVxuXHRcdHJldHVybiBoYW5kbGVyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQSxNQUFNLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLE9BQU8sYUFBYTtBQUNyRCxNQUFNLENBQUMsQ0FBQyxJQUFJLE9BQU8sTUFBTSxXQUFXOztBQUVwQyxNQUFNLENBQUMsUUFBRyxDQUFDLGlCQUFpQixFQUFBO0NBQzNCLFVBQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBRztDQUNwQyxPQUFBLElBQUc7Q0FBQTs7QUFFQSxJQUFBLGNBQWMsR0FBRyxJQUFJOzs7O0FBR3pCLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBQyxDQUFDLFdBQVcsRUFBQTtDQUMxQixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBRSxLQUFLLEdBQUcsTUFBTSxDQUFFLEdBQUcsR0FBRyxFQUFFLENBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBQTtFQUNyRCxNQUFBLE1BQU0sR0FBRyxLQUFBLEtBQUssRUFBRSxNQUFNOztFQUU1QixFQUFFLEVBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUE7R0FDYixJQUFJLEdBQUcsR0FBRztHQUNWLEdBQUcsR0FBRyxFQUFFO0dBQUE7O0VBRVQsRUFBRSxFQUFDLE1BQU0sQ0FBQyxFQUFHLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBQTtHQUM1QixJQUFBLEVBQUUsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQztHQUNsQyxJQUFBLEVBQUUsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQztHQUNsQyxJQUFBLEVBQUUsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7O0dBRWxDLElBQUEsRUFBRSxHQUFHLEVBQUUsSUFBRyxVQUFNLENBQUEsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFFLEtBQUcsUUFBSSxLQUFLLENBQUU7R0FDckMsSUFBQSxFQUFFLEdBQUcsRUFBRSxJQUFHLFVBQU0sQ0FBQSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUUsS0FBRyxRQUFJLEtBQUssQ0FBRTs7R0FFckMsSUFBQSxJQUFJLEdBQUcsRUFBRSxJQUFJLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUcsSUFBSSxDQUFDLEtBQUs7R0FDN0MsSUFBQSxJQUFJLEdBQUcsRUFBRSxJQUFJLENBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUcsSUFBSSxDQUFDLE1BQU07O0dBRW5ELEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztHQUNwQyxFQUFFLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7R0FBQTs7RUFFckMsTUFBTSxDQUFDLElBQUc7RUFBQTs7Q0FFWCxHQUFHLENBQUMsS0FBSyxFQUFBO0VBQ1IsT0FBQSxhQUFNLEtBQUssS0FBQSxLQUFLLENBQUMsTUFBTSxDQUFDLFdBQVc7RUFBQTs7Q0FFcEMsR0FBRyxDQUFDLE1BQU0sRUFBQTtFQUNULE9BQUEsY0FBTyxLQUFLLEtBQUEsS0FBSyxDQUFDLE1BQU0sQ0FBQyxZQUFZO0VBQUE7O0FBQUEsQ0FBQTs7QUFFdkMsUUFBRyxDQUFDLGlCQUFpQixFQUFBO0NBQ3BCLEVBQU0sRUFBQyxFQUFBLFVBQU0sQ0FBQyxjQUFjLENBQUEsRUFBQTtFQUMzQixFQUFNLEVBQUMsRUFBQSxjQUFjLENBQUEsRUFBQTtHQUNwQixPQUFPLENBQUMsSUFBSSxDQUFDLHVDQUF1QyxDQUFDO0dBQ3JELGNBQWMsR0FBRyxDQUFDLE9BQU8sRUFBRyxRQUFFLEtBQUMsT0FBQSxJQUFHLEdBQUMsQ0FBQztHQUFBO0VBQUE7O0NBRXRDLE9BQUEsVUFBTSxDQUFDLGtCQUFrQixHQUFHLGNBQWMsS0FBSyxHQUFHLENBQUMsY0FBYyxDQUFDLFFBQUUsQ0FBQyxPQUFPLEVBQUM7OztFQUc1RSxHQUFHLDJCQUFVLE9BQU8sa0NBQUE7T0FBaEIsS0FBSztHQUNKLElBQUEsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUUsTUFBTSxFQUFFLEtBQUssRUFBQztHQUNoRSxDQUFDLENBQUMsS0FBSyxHQUFHLEtBQUs7R0FDZixDQUFDLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxXQUFXO0dBQzFCLENBQUMsY0FBWSxDQUFDLFdBQVcsQ0FBQztHQUMxQixLQUFLLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7O0dBRXpCLElBQUEsRUFBRSxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUUsTUFBTSxFQUFFLEtBQUssRUFBQztHQUNqRSxLQUFLLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7R0FBQTtFQUMvQixNQUFNOzs7RUFFd0QsQ0FkRTtDQWNGOzs7QUFFekQsS0FBSyxDQUFDLFFBQU8sRUFBQTtDQUNmLFNBQVMsQ0FBQyxLQUFLLENBQUUsT0FBTyxDQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7O0VBRW5DLElBQUEsUUFBUSxHQUFHLGlCQUFpQixFQUFDO0VBQ2pDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDOztFQUV0QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7RUFDekMsTUFBTSxDQUFDLE9BQU87RUFBQTt5Q0FQSCxPQUFPLENBQUEsQ0FBQTtBQU9KLENBQUE7QUFBQTsifQ==","css":""}