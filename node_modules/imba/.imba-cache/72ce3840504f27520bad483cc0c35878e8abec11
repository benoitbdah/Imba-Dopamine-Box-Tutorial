{"id":"cq","warnings":[],"errors":[],"js":"// @ts-ignore\nfunction isa$(a,b){ return typeof b === \"string\" ? (typeof a === b) : b[Symbol.hasInstance]?.(a) };\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };\nimport {register$} from 'imba/runtime';\nconst $__init__$ = Symbol.for('#__init__'), $watchers$ = Symbol.for('#watchers');\n\n/*body*/\n// imba$stdlib=1\n// TODO Functions like this should be inlineable and not depend on the runtime\nimport {emit,listen} from './utils';\n\n// T extends {$accessor: (...args: any[]) => infer X} ? X : T\n// T extends {$accessor: (...args: any[]) => infer X} ? X : T\n// export def accessor value, target, key, name, slot, context\n\n\n/* @ts\ntype AccessorLike<T> = T extends { $accessor: (...args:any[]) => any } ? T : {$accessor(...args:any[]):T,$function(...args:any[]):T}\n*/\n\n\n// type AccessorLike<T> = T extends { $accessor: (...args:any[]) => any } ? T : {$accessor(...args:any[]):T}\n// ($1 extends {$accessor: (...args: any[]) => infer X} ? X : $1) value\\any, target\\any?, key\\any?, name\\any?, slot\\any?, context\\any?,callback\\any?\n\nexport function accessor(value,target,key,name,slot,context){\n\tif (value && isa$(value.$accessor,Function)) {\n\t\tvalue = value.$accessor(target,key,name,slot,context);\n\t} else {\n\t\t// cache this by default?\n\t\t\t\t// must implement custom .accessor method to bypass\n\t\tcontext[slot] = value;\n\t};\n\t\n\t// if accessor has no init method - forward to accessor.set\n\tif (value && !(value.$init)) {\n\t\tvalue.$init = value.$set || function() { return true; };\n\t};\n\treturn value;\n};\n\n\n/* @ts\ntype IsFunction<T> = T extends (...args: any[]) => any ? true : false;\ntype Descriptor<T> = {[K in keyof T]: IsFunction<T[K]> extends true ? T[K] : (arg?: T[K]) => void};\n*/\n\n\nexport function descriptor(value){\n\treturn value;\n};\n\nlet c$0 = Symbol();\nexport class Accessor {\n\t// Store in localStorage - if target has unique `id`\n\tconstructor($$ = null){\n\t\tthis[$__init__$]($$);\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $0;\n\t\tthis.local = ($$ && ($0 = $$.local) !== undefined) ? ($0) : false;\n\t\tthis.session = ($$ && ($0 = $$.session) !== undefined) ? ($0) : false;\n\t\tthis.weak = ($$ && ($0 = $$.weak) !== undefined) ? ($0) : false;\n\t\t\n\t}\n\t\n\t\n\t// Store in sessionStorage - if target has unique `id`\n\t\n\t\n\t// Store in separate weakmap\n\t\n\t\n\twatch(cb){\n\t\treturn (this[$watchers$] ||= []).push(cb);\n\t}\n\t\n\t$get(target,key){\n\t\treturn target[key];\n\t}\n\t\n\t$set(value,target,key,name){\n\t\tif (this[$watchers$]) {\n\t\t\tlet prev = this.$get(target,key,name);\n\t\t\tif (prev != value) {\n\t\t\t\ttarget[key] = value;\n\t\t\t\tfor (let i = 0, $1 = iter$__(this[$watchers$]), $2 = $1.length; i < $2; i++) {\n\t\t\t\t\tlet watcher = $1[i];\n\t\t\t\t\tlet res = watcher.call(target,value,prev,this);\n\t\t\t\t};\n\t\t\t};\n\t\t} else {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\treturn;\n\t}\n\t\n\t// by default we are caching the @prop descriptor\n\t// so that it is only created once for all instances of a class\n\t$accessor(target,key,name,slot,context){\n\t\t// finalize it now - or stay slow?\n\t\treturn context[slot] = this;\n\t}\n\tstatic { register$(this,c$0,'Accessor',16) }\n};\n\nexport function Î±prop(){\n\treturn new Accessor;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjZXNzb3JzLmltYmEiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhY2Nlc3NvcnMuaW1iYSJdLCJzb3VyY2VzQ29udGVudCI6WyIjIGltYmEkc3RkbGliPTFcbiMgVE9ETyBGdW5jdGlvbnMgbGlrZSB0aGlzIHNob3VsZCBiZSBpbmxpbmVhYmxlIGFuZCBub3QgZGVwZW5kIG9uIHRoZSBydW50aW1lXG5pbXBvcnQge2VtaXQsbGlzdGVufSBmcm9tICcuL3V0aWxzJ1xuXG4jIFQgZXh0ZW5kcyB7JGFjY2Vzc29yOiAoLi4uYXJnczogYW55W10pID0+IGluZmVyIFh9ID8gWCA6IFRcbiMgVCBleHRlbmRzIHskYWNjZXNzb3I6ICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgWH0gPyBYIDogVFxuIyBleHBvcnQgZGVmIGFjY2Vzc29yIHZhbHVlLCB0YXJnZXQsIGtleSwgbmFtZSwgc2xvdCwgY29udGV4dFxuXG5cbiMjIyBAdHNcbnR5cGUgQWNjZXNzb3JMaWtlPFQ+ID0gVCBleHRlbmRzIHsgJGFjY2Vzc29yOiAoLi4uYXJnczphbnlbXSkgPT4gYW55IH0gPyBUIDogeyRhY2Nlc3NvciguLi5hcmdzOmFueVtdKTpULCRmdW5jdGlvbiguLi5hcmdzOmFueVtdKTpUfVxuIyMjXG5cbiMgdHlwZSBBY2Nlc3Nvckxpa2U8VD4gPSBUIGV4dGVuZHMgeyAkYWNjZXNzb3I6ICguLi5hcmdzOmFueVtdKSA9PiBhbnkgfSA/IFQgOiB7JGFjY2Vzc29yKC4uLmFyZ3M6YW55W10pOlR9XG4jICgkMSBleHRlbmRzIHskYWNjZXNzb3I6ICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgWH0gPyBYIDogJDEpIHZhbHVlXFxhbnksIHRhcmdldFxcYW55Pywga2V5XFxhbnk/LCBuYW1lXFxhbnk/LCBzbG90XFxhbnk/LCBjb250ZXh0XFxhbnk/LGNhbGxiYWNrXFxhbnk/XG5cbmV4cG9ydCBkZWYgYWNjZXNzb3I8VD5cXEFjY2Vzc29yTGlrZTxUPiB2YWx1ZVxcVCwgdGFyZ2V0XFxhbnk/LCBrZXlcXGFueT8sIG5hbWVcXGFueT8sIHNsb3RcXGFueT8sIGNvbnRleHRcXGFueT9cblxuXHRpZiB2YWx1ZSBhbmQgdmFsdWUuJGFjY2Vzc29yIGlzYSBGdW5jdGlvblxuXHRcdHZhbHVlID0gdmFsdWUuJGFjY2Vzc29yKHRhcmdldCwga2V5LCBuYW1lLCBzbG90LCBjb250ZXh0KVxuXHRlbHNlXG5cdFx0IyBjYWNoZSB0aGlzIGJ5IGRlZmF1bHQ/XG5cdFx0IyBtdXN0IGltcGxlbWVudCBjdXN0b20gLmFjY2Vzc29yIG1ldGhvZCB0byBieXBhc3Ncblx0XHRjb250ZXh0W3Nsb3RdID0gdmFsdWVcblxuXHQjIGlmIGFjY2Vzc29yIGhhcyBubyBpbml0IG1ldGhvZCAtIGZvcndhcmQgdG8gYWNjZXNzb3Iuc2V0XG5cdGlmIHZhbHVlIGFuZCAhdmFsdWUuJGluaXRcblx0XHR2YWx1ZS4kaW5pdCA9IHZhbHVlLiRzZXQgb3IgZG8geWVzXG5cdHJldHVybiB2YWx1ZVxuXG5cbiMjIyBAdHNcbnR5cGUgSXNGdW5jdGlvbjxUPiA9IFQgZXh0ZW5kcyAoLi4uYXJnczogYW55W10pID0+IGFueSA/IHRydWUgOiBmYWxzZTtcbnR5cGUgRGVzY3JpcHRvcjxUPiA9IHtbSyBpbiBrZXlvZiBUXTogSXNGdW5jdGlvbjxUW0tdPiBleHRlbmRzIHRydWUgPyBUW0tdIDogKGFyZz86IFRbS10pID0+IHZvaWR9O1xuIyMjXG5cbmV4cG9ydCBkZWYgZGVzY3JpcHRvclxcRGVzY3JpcHRvcjwkMT4gdmFsdWVcblx0cmV0dXJuIHZhbHVlXG5cbmV4cG9ydCBjbGFzcyBBY2Nlc3NvclxuXG5cdCMgU3RvcmUgaW4gbG9jYWxTdG9yYWdlIC0gaWYgdGFyZ2V0IGhhcyB1bmlxdWUgYGlkYFxuXHRsb2NhbCA9IG5vXG5cblx0IyBTdG9yZSBpbiBzZXNzaW9uU3RvcmFnZSAtIGlmIHRhcmdldCBoYXMgdW5pcXVlIGBpZGBcblx0c2Vzc2lvbiA9IG5vXG5cblx0IyBTdG9yZSBpbiBzZXBhcmF0ZSB3ZWFrbWFwXG5cdHdlYWsgPSBub1xuXG5cdGRlZiB3YXRjaCBjYlxuXHRcdCgjd2F0Y2hlcnMgfHw9IFtdKS5wdXNoKGNiKVxuXG5cdGRlZiAkZ2V0IHRhcmdldCwga2V5XG5cdFx0dGFyZ2V0W2tleV1cblxuXHRkZWYgJHNldCB2YWx1ZSwgdGFyZ2V0LCBrZXksIG5hbWVcblx0XHRpZiAjd2F0Y2hlcnNcblx0XHRcdGxldCBwcmV2ID0gc2VsZi4kZ2V0KHRhcmdldCxrZXksbmFtZSlcblx0XHRcdGlmIHByZXYgIT0gdmFsdWVcblx0XHRcdFx0dGFyZ2V0W2tleV0gPSB2YWx1ZVxuXHRcdFx0XHRmb3Igd2F0Y2hlcixpIGluICN3YXRjaGVyc1xuXHRcdFx0XHRcdGxldCByZXMgPSB3YXRjaGVyLmNhbGwodGFyZ2V0LHZhbHVlLHByZXYsc2VsZilcblx0XHRlbHNlXG5cdFx0XHR0YXJnZXRba2V5XSA9IHZhbHVlXG5cdFx0cmV0dXJuXG5cblx0IyBieSBkZWZhdWx0IHdlIGFyZSBjYWNoaW5nIHRoZSBAcHJvcCBkZXNjcmlwdG9yXG5cdCMgc28gdGhhdCBpdCBpcyBvbmx5IGNyZWF0ZWQgb25jZSBmb3IgYWxsIGluc3RhbmNlcyBvZiBhIGNsYXNzXG5cdGRlZiAkYWNjZXNzb3IgdGFyZ2V0LCBrZXksIG5hbWUsIHNsb3QsIGNvbnRleHRcblx0XHQjIGZpbmFsaXplIGl0IG5vdyAtIG9yIHN0YXkgc2xvdz9cblx0XHRjb250ZXh0W3Nsb3RdID0gc2VsZlxuXG5leHBvcnQgZGVmIEBwcm9wXG5cdHJldHVybiBuZXcgQWNjZXNzb3IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRUEsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLE9BQU8sU0FBUzs7Ozs7Ozs7Ozs7Ozs7O0FBY25DLE1BQU0sQ0FBQyxRQUFHLENBQUMsUUFBUSxDQUFvQixLQUFLLENBQUksTUFBTSxDQUFPLEdBQUcsQ0FBTyxJQUFJLENBQU8sSUFBSSxDQUFPLE9BQU8sQ0FBSztDQUV4RyxFQUFFLEVBQUMsS0FBSyxDQUFDLEVBQUcsQ0FBQyxLQUFBLEtBQUssQ0FBQyxTQUFTLENBQUssUUFBUSxDQUFBLEVBQUE7RUFDeEMsS0FBSyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFFLEdBQUcsQ0FBRSxJQUFJLENBQUUsSUFBSSxDQUFFLE9BQU8sQ0FBQztFQUFBLE1BQ3REOzs7RUFHSCxPQUFPLENBQUEsSUFBSyxDQUFDLEdBQUcsS0FBSztFQUFBOzs7Q0FHdEIsRUFBRSxFQUFDLEtBQUssQ0FBQyxFQUFHLENBQUMsRUFBQyxLQUFLLENBQUMsS0FBSyxDQUFBLEVBQUE7RUFDeEIsS0FBSyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFFLEtBQUMsT0FBQSxJQUFHO0VBQUE7Q0FDbkMsTUFBTSxDQUFDLEtBQUs7Q0FBQTs7Ozs7Ozs7O0FBUWIsTUFBTSxDQUFDLFFBQUcsQ0FBQyxVQUFVLENBQWdCLEtBQUssQ0FBQTtDQUN6QyxNQUFNLENBQUMsS0FBSztDQUFBOzs7QUFFYixNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBQTs7dUJBdkNyQjs7RUFBQTtrREFBQTs7T0EwQ0MsS0FBSyxtQkFBTCxLQUFLLENBQUEscUJBQUEsSUFBRyxLQUFFO09BR1YsT0FBTyxtQkFBUCxPQUFPLENBQUEscUJBQUEsSUFBRyxLQUFFO09BR1osSUFBSSxtQkFBSixJQUFJLENBQUEscUJBQUEsSUFBRyxLQUFFOztFQWhEVjs7Ozs7Ozs7O0NBa0RLLEtBQUssQ0FBQyxFQUFFLENBQUE7RUFDVixPQUFBLENBQUEsZ0JBQVMsS0FBSyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO0VBQUE7O0NBRXhCLElBQUksQ0FBQyxNQUFNLENBQUUsR0FBRyxDQUFBO0VBQ25CLE9BQUEsTUFBTSxDQUFBLEdBQUksQ0FBQztFQUFBOztDQUVSLElBQUksQ0FBQyxLQUFLLENBQUUsTUFBTSxDQUFFLEdBQUcsQ0FBRSxJQUFJLENBQUE7RUFDaEMsRUFBRSxFQUFDLGdCQUFTLEVBQUE7R0FDUCxJQUFBLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO0dBQ3JDLEVBQUUsRUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBQTtJQUNmLE1BQU0sQ0FBQSxHQUFJLENBQUMsR0FBRyxLQUFLO0lBQ25CLEdBQUcsMEJBQWMsZ0JBQVMsZ0NBQUE7U0FBdEIsT0FBTztLQUNOLElBQUEsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0tBQUE7SUFBQTtHQUFBLE1BQzdDO0dBQ0gsTUFBTSxDQUFBLEdBQUksQ0FBQyxHQUFHLEtBQUs7R0FBQTtFQUNwQixNQUFNO0VBQUE7Ozs7Q0FJSCxTQUFTLENBQUMsTUFBTSxDQUFFLEdBQUcsQ0FBRSxJQUFJLENBQUUsSUFBSSxDQUFFLE9BQU8sQ0FBQTs7RUFFN0MsT0FBQSxPQUFPLENBQUEsSUFBSyxDQUFDLEdBQUcsSUFBSTtFQUFBOztBQUFBLENBQUE7O0FBRXRCLE1BQU0sQ0FBQyxRQUFHLENBQUMsS0FBSyxFQUFBO0NBQ2YsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRO0NBQUE7QUFBQTsifQ==","css":""}