{"id":"ed","warnings":[],"errors":[],"js":"// @ts-ignore\nfunction isa$(a,b){ return typeof b === \"string\" ? (typeof a === b) : b[Symbol.hasInstance]?.(a) };\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };\nimport {register$} from 'imba/runtime';\nconst $$onchange$ = Symbol.for('##onchange'), $afterVisit$ = Symbol.for('#afterVisit'), $$oninput$ = Symbol.for('##oninput'), $$onclick$ = Symbol.for('##onclick'), $$bound$ = Symbol.for('##bound'), $$visitContext$ = Symbol.for('##visitContext');\n\n/*body*/\n// imba$stdlib=1\n\nimport {Element,HTMLSelectElement,HTMLInputElement,HTMLButtonElement,HTMLTextAreaElement,HTMLOptionElement} from './core';\n\nimport {commit} from '../scheduler';\n\n// TODO use meta properties for $$value, ##bound etc\n\nexport function use_dom_bind(){\n\tglobalThis.imba.uses_dom_bind = true;\n\treturn true;\n};\n\nconst toBind = {\n\tINPUT: true,\n\tSELECT: true,\n\tTEXTAREA: true,\n\tBUTTON: true\n};\n\nlet isGroup = function(obj) {\n\treturn isa$(obj,Array) || (obj && isa$(obj.has,Function));\n};\n\nlet bindHas = function(object,value) {\n\tif (object == value) {\n\t\treturn true;\n\t} else if (isa$(object,Array)) {\n\t\treturn object.indexOf(value) >= 0;\n\t} else if (object && isa$(object.has,Function)) {\n\t\treturn object.has(value);\n\t} else if (object && isa$(object.contains,Function)) {\n\t\treturn object.contains(value);\n\t} else {\n\t\treturn false;\n\t};\n};\n\nlet bindAdd = function(object,value) {\n\tif (isa$(object,Array)) {\n\t\treturn object.push(value);\n\t} else if (object && isa$(object.add,Function)) {\n\t\treturn object.add(value);\n\t};\n};\n\nlet bindRemove = function(object,value) {\n\tif (isa$(object,Array)) {\n\t\tlet idx = object.indexOf(value);\n\t\tif (idx >= 0) { return object.splice(idx,1) };\n\t} else if (object && isa$(object.delete,Function)) {\n\t\treturn object.delete(value);\n\t};\n};\n\nfunction createProxyProperty(target){\n\tfunction getter(){\n\t\treturn target[0] ? target[0][target[1]] : undefined;\n\t};\n\t\n\tfunction setter(v){\n\t\treturn target[0] ? ((target[0][target[1]] = v)) : null;\n\t};\n\t\n\treturn {\n\t\tget: getter,\n\t\tset: setter\n\t};\n};\n\n/*\nData binding\n*/\n\nlet c$0 = Symbol();\nclass ΩElement {\n\tgetRichValue(){\n\t\treturn this.value;\n\t}\n\t\n\tsetRichValue(value){\n\t\treturn this.value = value;\n\t}\n\t\n\tbind$(key,value){\n\t\tlet o = value || [];\n\t\t\n\t\tif (key == 'data' && !(this[$$bound$]) && toBind[this.nodeName]) {\n\t\t\tthis[$$bound$] = true;\n\t\t\tif (this[$$onchange$]) {\n\t\t\t\tthis.addEventListener('change',this[$$onchange$] = this[$$onchange$].bind(this));\n\t\t\t};\n\t\t\tif (this[$$oninput$]) {\n\t\t\t\tthis.addEventListener('input',this[$$oninput$] = this[$$oninput$].bind(this),{capture: true});\n\t\t\t};\n\t\t\tif (this[$$onclick$]) {\n\t\t\t\tthis.addEventListener('click',this[$$onclick$] = this[$$onclick$].bind(this),{capture: true});\n\t\t\t};\n\t\t};\n\t\t\n\t\tObject.defineProperty(this,key,(isa$(o,Array)) ? createProxyProperty(o) : o);\n\t\treturn o;\n\t}\n\tstatic { register$(this,c$0,'Element',1,Element); }\n};\n\nObject.defineProperty(Element.prototype,'richValue',{\n\tget: function() { return this.getRichValue(); },\n\tset: function(v) { return this.setRichValue(v); }\n});\n\nlet c$1 = Symbol();\nclass ΩHTMLSelectElement {\n\t[$$onchange$](e){\n\t\tlet model = this.data;\n\t\tlet prev = this.$$value;\n\t\tthis.$$value = undefined;\n\t\tlet values = this.getRichValue();\n\t\t\n\t\tif (this.multiple) {\n\t\t\tif (prev) {\n\t\t\t\tfor (let $1 = 0, $2 = iter$__(prev), $3 = $2.length; $1 < $3; $1++) {\n\t\t\t\t\tlet value = $2[$1];\n\t\t\t\t\tif (values.indexOf(value) != -1) { continue; };\n\t\t\t\t\tbindRemove(model,value);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tfor (let $4 = 0, $5 = iter$__(values), $6 = $5.length; $4 < $6; $4++) {\n\t\t\t\tlet value = $5[$4];\n\t\t\t\tif (!(prev) || prev.indexOf(value) == -1) {\n\t\t\t\t\tbindAdd(model,value);\n\t\t\t\t};\n\t\t\t};\n\t\t} else {\n\t\t\tthis.data = values[0];\n\t\t};\n\t\tcommit();\n\t\treturn this;\n\t}\n\t\n\tgetRichValue(){\n\t\tvar $7;\n\t\tif (this.$$value) {\n\t\t\treturn this.$$value;\n\t\t};\n\t\t\n\t\t$7 = [];\n\t\tfor (let $8 = 0, $9 = iter$__(this.selectedOptions), $10 = $9.length; $8 < $10; $8++) {\n\t\t\tlet o = $9[$8];\n\t\t\t$7.push(o.richValue);\n\t\t};\n\t\treturn this.$$value = $7;\n\t}\n\t\n\tsyncValue(){\n\t\tlet model = this.data;\n\t\t\n\t\tif (this.multiple) {\n\t\t\tlet vals = [];\n\t\t\tfor (let i = 0, $11 = iter$__(this.options), $12 = $11.length; i < $12; i++) {\n\t\t\t\tlet option = $11[i];\n\t\t\t\tlet val = option.richValue;\n\t\t\t\tlet sel = bindHas(model,val);\n\t\t\t\toption.selected = sel;\n\t\t\t\tif (sel) { vals.push(val) };\n\t\t\t};\n\t\t\tthis.$$value = vals;\n\t\t} else {\n\t\t\tfor (let i = 0, $13 = iter$__(this.options), $14 = $13.length; i < $14; i++) {\n\t\t\t\tlet option = $13[i];\n\t\t\t\tlet val = option.richValue;\n\t\t\t\tif (val == model) {\n\t\t\t\t\tthis.$$value = [val];\n\t\t\t\t\tthis.selectedIndex = i;break;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\treturn;\n\t}\n\t\n\t[$afterVisit$](){\n\t\tthis.syncValue();\n\t\tif (this[$$visitContext$]) { return this[$$visitContext$] = null };\n\t}\n\tstatic { register$(this,c$1,'HTMLSelectElement',1,HTMLSelectElement); }\n};\n\nlet c$2 = Symbol();\nclass ΩHTMLOptionElement {\n\tsetRichValue(value){\n\t\tthis.$$value = value;\n\t\treturn this.value = value;\n\t}\n\t\n\tgetRichValue(){\n\t\tif (this.$$value !== undefined) {\n\t\t\treturn this.$$value;\n\t\t};\n\t\treturn this.value;\n\t}\n\tstatic { register$(this,c$2,'HTMLOptionElement',1,HTMLOptionElement); }\n};\n\nlet c$3 = Symbol();\nclass ΩHTMLTextAreaElement {\n\tsetRichValue(value){\n\t\tthis.$$value = value;\n\t\treturn this.value = value;\n\t}\n\t\n\tgetRichValue(){\n\t\tif (this.$$value !== undefined) {\n\t\t\treturn this.$$value;\n\t\t};\n\t\treturn this.value;\n\t}\n\t\n\t[$$oninput$](e){\n\t\tthis.data = this.value;\n\t\treturn commit();\n\t}\n\t\n\t[$afterVisit$](){\n\t\tlet val = this.data;\n\t\tif (val === null || val === undefined) { val = '' };\n\t\tif (this[$$bound$] && this.value != val) {\n\t\t\tthis.value = val;\n\t\t};\n\t\tif (this[$$visitContext$]) { return this[$$visitContext$] = null };\n\t}\n\tstatic { register$(this,c$3,'HTMLTextAreaElement',1,HTMLTextAreaElement); }\n};\n\nlet c$4 = Symbol();\nclass ΩHTMLInputElement {\n\t[$$oninput$](e){\n\t\tlet typ = this.type;\n\t\t\n\t\tif (typ == 'checkbox' || typ == 'radio') {\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tif (typ == 'number' && Number.isNaN(this.valueAsNumber)) {\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tthis.$$value = undefined;\n\t\tthis.data = this.richValue;\n\t\treturn commit();\n\t}\n\t\n\t[$$onchange$](e){\n\t\tlet model = this.data;\n\t\tlet val = this.richValue;\n\t\t\n\t\tif (this.type == 'checkbox' || this.type == 'radio') {\n\t\t\tlet checked = this.checked;\n\t\t\tif (isGroup(model)) {\n\t\t\t\tchecked ? bindAdd(model,val) : bindRemove(model,val);\n\t\t\t} else {\n\t\t\t\tthis.data = checked ? val : false;\n\t\t\t};\n\t\t};\n\t\treturn commit();\n\t}\n\t\n\tsetRichValue(value){\n\t\tif (this.$$value !== value) {\n\t\t\tthis.$$value = value;\n\t\t\t\n\t\t\tif (this.value !== value) {\n\t\t\t\tthis.value = value;\n\t\t\t};\n\t\t};\n\t\treturn;\n\t}\n\t\n\tgetRichValue(){\n\t\tif (this.$$value !== undefined) {\n\t\t\treturn this.$$value;\n\t\t};\n\t\t\n\t\tlet value = this.value;\n\t\tlet typ = this.type;\n\t\t\n\t\tif (typ == 'range' || typ == 'number') {\n\t\t\tlet num = this.valueAsNumber;\n\t\t\tif (Number.isNaN(num)) { num = Number(value.replace(/\\,/,'.') + 0) };\n\t\t\tif (Number.isNaN(num)) { num = null };\n\t\t\tvalue = num;\n\t\t} else if (typ == 'checkbox') {\n\t\t\tif (value == undefined || value === 'on') { value = true };\n\t\t};\n\t\t\n\t\treturn value;\n\t}\n\t\n\t[$afterVisit$](){\n\t\tif (this[$$bound$]) {\n\t\t\tlet typ = this.type;\n\t\t\tif (typ == 'checkbox' || typ == 'radio') {\n\t\t\t\tlet val = this.data;\n\t\t\t\tif (val === true || val === false || val == null) {\n\t\t\t\t\tthis.checked = !(!(val));\n\t\t\t\t} else {\n\t\t\t\t\tthis.checked = bindHas(val,this.richValue);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.richValue = this.data;\n\t\t\t};\n\t\t};\n\t\tif (this[$$visitContext$]) { this[$$visitContext$] = null };\n\t\treturn;\n\t}\n\tstatic { register$(this,c$4,'HTMLInputElement',1,HTMLInputElement); }\n};\n\nlet c$5 = Symbol();\nclass ΩHTMLButtonElement {\n\tget checked(){\n\t\treturn this.$checked;\n\t}\n\t\n\tset checked(val){\n\t\tif (val != this.$checked) {\n\t\t\tthis.$checked = val;\n\t\t\tthis.flags.toggle('checked',!(!(val)));\n\t\t};\n\t}\n\t\n\tsetRichValue(value){\n\t\tthis.$$value = value;\n\t\treturn this.value = value;\n\t}\n\t\n\tgetRichValue(){\n\t\tif (this.$$value !== undefined) {\n\t\t\treturn this.$$value;\n\t\t};\n\t\treturn this.value;\n\t}\n\t\n\t[$$onclick$](e){\n\t\tlet data = this.data;\n\t\tlet toggled = this.checked;\n\t\tlet val = this.richValue;\n\t\t// if self.type == 'checkbox' or self.type == 'radio'\n\t\tif (isGroup(data)) {\n\t\t\ttoggled ? bindRemove(data,val) : bindAdd(data,val);\n\t\t} else if (this.$$value == undefined) {\n\t\t\tthis.data = toggled ? false : true;\n\t\t} else {\n\t\t\tthis.data = toggled ? null : val;\n\t\t};\n\t\tthis[$afterVisit$]();\n\t\treturn commit();\n\t}\n\t\n\t[$afterVisit$](){\n\t\tif (this[$$bound$]) {\n\t\t\tlet data = this.data;\n\t\t\tlet val = (this.$$value == undefined) ? true : this.$$value;\n\t\t\t\n\t\t\tif (isGroup(data)) {\n\t\t\t\tthis.checked = bindHas(data,val);\n\t\t\t} else {\n\t\t\t\tthis.checked = data == val;\n\t\t\t};\n\t\t};\n\t\tif (this[$$visitContext$]) { this[$$visitContext$] = null };\n\t\treturn;\n\t}\n\tstatic { register$(this,c$5,'HTMLButtonElement',1,HTMLButtonElement); }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}