{"id":"ek","warnings":[],"errors":[],"js":"// @ts-ignore\nfunction isa$(a,b){ return typeof b === \"string\" ? (typeof a === b) : b[Symbol.hasInstance]?.(a) }\nimport {register$} from 'imba/runtime';\nconst $idler$ = Symbol.for('#idler'), $resolve$ = Symbol.for('#resolve');\n\n/*body*/\n// imba$stdlib=1\nimport {emit,listen,once,unlisten} from './utils';\n\nlet c$0 = Symbol();\nexport class Queue extends Set {\n\tconstructor(){\n\t\tsuper();\n\t\tthis[$idler$] = Promise.resolve(this);\n\t}\n\t\n\temit(name,...params){\n\t\treturn emit(this,name,params);\n\t}\n\ton(name,...params){\n\t\treturn listen(this,name,...params);\n\t}\n\tonce(name,...params){\n\t\treturn once(this,name,...params);\n\t}\n\tun(name,...params){\n\t\treturn unlisten(this,name,...params);\n\t}\n\t\n\tadd(value){\n\t\tvar self = this;\n\t\tif (isa$(value,Function)) {\n\t\t\tvalue = value();\n\t\t};\n\t\t\n\t\tif (!(this.has(value))) {\n\t\t\tlet first = this.size == 0;\n\t\t\t\n\t\t\tsuper.add(value);\n\t\t\tif (first) {\n\t\t\t\tthis[$idler$] = this[$resolve$] = null;\n\t\t\t\tthis.emit('busy',this);\n\t\t\t};\n\t\t\tthis.emit('add',value,this);\n\t\t\t\n\t\t\tlet done = function() { return self.delete(value); };\n\t\t\tvalue.then(done,done);\n\t\t};\n\t\t\n\t\treturn value;\n\t}\n\t\n\tdelete(value){\n\t\tif (super.delete(value)) {\n\t\t\tthis.emit('delete',value,this);\n\t\t\tif (this.size == 0) {\n\t\t\t\tif (this[$resolve$]) {\n\t\t\t\t\tthis[$resolve$](true);\n\t\t\t\t\tthis[$resolve$] = null;// why are we setting this back to null?\n\t\t\t\t};\n\t\t\t\tthis.emit('idle',this);\n\t\t\t};\n\t\t\t\n\t\t\treturn true;\n\t\t};\n\t\treturn false;\n\t}\n\t\n\tget idle(){\n\t\tvar self = this;\n\t\treturn this[$idler$] ||= new Promise(function(resolve) {\n\t\t\tif (self.size == 0) {\n\t\t\t\treturn resolve(true);\n\t\t\t} else {\n\t\t\t\treturn self[$resolve$] = resolve;\n\t\t\t};\n\t\t});\n\t}\n\t\n\tget idleÎ¦(){\n\t\treturn this.size == 0;\n\t}\n\t\n\tthen(ok,err){\n\t\treturn this.idle.then(ok,err);\n\t}\n\tstatic { register$(this,c$0,'Queue',24) }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVldWUuaW1iYSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInF1ZXVlLmltYmEiXSwic291cmNlc0NvbnRlbnQiOlsiIyBpbWJhJHN0ZGxpYj0xXG5pbXBvcnQge2VtaXQsbGlzdGVuLG9uY2UsdW5saXN0ZW59IGZyb20gJy4vdXRpbHMnXG5cbmV4cG9ydCBjbGFzcyBRdWV1ZSA8IFNldFxuXHRjb25zdHJ1Y3RvclxuXHRcdHN1cGVyKClcblx0XHQjaWRsZXIgPSBQcm9taXNlLnJlc29sdmUodGhpcylcblxuXHRkZWYgZW1pdCBuYW1lLCAuLi5wYXJhbXMgZG8gZW1pdChzZWxmLG5hbWUscGFyYW1zKVxuXHRkZWYgb24gbmFtZSwgLi4ucGFyYW1zIGRvIGxpc3RlbihzZWxmLG5hbWUsLi4ucGFyYW1zKVxuXHRkZWYgb25jZSBuYW1lLCAuLi5wYXJhbXMgZG8gb25jZShzZWxmLG5hbWUsLi4ucGFyYW1zKVxuXHRkZWYgdW4gbmFtZSwgLi4ucGFyYW1zIGRvIHVubGlzdGVuKHNlbGYsbmFtZSwuLi5wYXJhbXMpXG5cblx0ZGVmIGFkZCB2YWx1ZVxuXHRcdGlmIHZhbHVlIGlzYSBGdW5jdGlvblxuXHRcdFx0dmFsdWUgPSB2YWx1ZSgpXG5cblx0XHR1bmxlc3MgaGFzKHZhbHVlKVxuXHRcdFx0bGV0IGZpcnN0ID0gc2l6ZSA9PSAwXG5cblx0XHRcdHN1cGVyKHZhbHVlKVxuXHRcdFx0aWYgZmlyc3Rcblx0XHRcdFx0I2lkbGVyID0gI3Jlc29sdmUgPSBudWxsXG5cdFx0XHRcdHNlbGYuZW1pdCgnYnVzeScsc2VsZilcblx0XHRcdHNlbGYuZW1pdCgnYWRkJyx2YWx1ZSxzZWxmKVxuXG5cdFx0XHRsZXQgZG9uZSA9IGRvIHNlbGYuZGVsZXRlKHZhbHVlKVxuXHRcdFx0dmFsdWUudGhlbihkb25lLGRvbmUpXG5cblx0XHRyZXR1cm4gdmFsdWVcblxuXHRkZWYgZGVsZXRlIHZhbHVlXG5cdFx0aWYgc3VwZXIodmFsdWUpXG5cdFx0XHRzZWxmLmVtaXQoJ2RlbGV0ZScsdmFsdWUsc2VsZilcblx0XHRcdGlmIHNpemUgPT0gMFxuXHRcdFx0XHRpZiAjcmVzb2x2ZVxuXHRcdFx0XHRcdCNyZXNvbHZlKHllcylcblx0XHRcdFx0XHQjcmVzb2x2ZSA9IG51bGwgIyB3aHkgYXJlIHdlIHNldHRpbmcgdGhpcyBiYWNrIHRvIG51bGw/XG5cdFx0XHRcdHNlbGYuZW1pdCgnaWRsZScsc2VsZilcblx0XHRcdFxuXHRcdFx0cmV0dXJuIHRydWVcblx0XHRyZXR1cm4gZmFsc2VcblxuXHRnZXQgaWRsZVxuXHRcdCNpZGxlciB8fD0gbmV3IFByb21pc2UgZG8ocmVzb2x2ZSlcblx0XHRcdGlmIHNpemUgPT0gMFxuXHRcdFx0XHRyZXNvbHZlKHllcylcblx0XHRcdGVsc2Vcblx0XHRcdFx0I3Jlc29sdmUgPSByZXNvbHZlXG5cblx0Z2V0IGlkbGU/XG5cdFx0c2l6ZSA9PSAwXG5cblx0ZGVmIHRoZW4gb2ssIGVyclxcYW55P1xuXHRcdGlkbGUudGhlbihvayxlcnIpIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxPQUFPLFNBQVM7OztBQUVqRCxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFDLENBQUMsR0FBRyxFQUFBO0NBQ3ZCLFdBQVcsRUFBQTtFQUNWLEtBQUssRUFBRTtFQUNQLGFBQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztFQUFBOztDQUUzQixJQUFJLENBQUMsSUFBSSxJQUFLLE1BQU07RUFBSSxPQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztFQVJuRDtDQVNLLEVBQUUsQ0FBQyxJQUFJLElBQUssTUFBTTtFQUFJLE9BQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUksR0FBQSxNQUFNLENBQUM7RUFUdEQ7Q0FVSyxJQUFJLENBQUMsSUFBSSxJQUFLLE1BQU07RUFBSSxPQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFJLEdBQUEsTUFBTSxDQUFDO0VBVnREO0NBV0ssRUFBRSxDQUFDLElBQUksSUFBSyxNQUFNO0VBQUksT0FBQSxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBSSxHQUFBLE1BQU0sQ0FBQztFQVh4RDs7Q0FhSyxHQUFHLENBQUMsS0FBSyxDQUFBOztFQUNaLEVBQUUsRUFBQyxLQUFBLEtBQUssQ0FBSyxRQUFRLENBQUEsRUFBQTtHQUNwQixLQUFLLEdBQUcsS0FBSyxFQUFFO0dBQUE7O0VBRWhCLEVBQU0sRUFBQyxFQUFBLEtBQUEsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFBLEVBQUE7R0FDWixJQUFBLEtBQUssR0FBRyxLQUFBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQzs7R0FFckIsTUFQRSxHQUFHLENBT0MsS0FBSyxDQUFDO0dBQ1osRUFBRSxFQUFDLEtBQUssRUFBQTtJQUNQLGFBQU0sR0FBRyxlQUFRLEdBQUcsSUFBSTtJQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFBQTtHQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDOztHQUV2QixJQUFBLElBQUksR0FBRyxRQUFFLEtBQUMsT0FBQSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztHQUNoQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7R0FBQTs7RUFFdEIsTUFBTSxDQUFDLEtBQUs7RUFBQTs7Q0FFVCxNQUFNLENBQUMsS0FBSyxDQUFBO0VBQ2YsRUFBRSxFQUFDLE1BREEsTUFBTSxDQUNBLEtBQUssQ0FBQyxFQUFBO0dBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztHQUM5QixFQUFFLEVBQUMsS0FBQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBQTtJQUNYLEVBQUUsRUFBQyxlQUFRLEVBQUE7S0FDVixlQUFRLENBQUMsSUFBRyxDQUFDO0tBQ2IsZUFBUSxHQUFHLElBQUk7S0FBd0M7SUFDeEQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQUE7O0dBRXZCLE1BQU0sQ0FBQyxJQUFJO0dBQUE7RUFDWixNQUFNLENBQUMsS0FBSztFQUFBOztDQUViLEdBQUcsQ0FBQyxJQUFJLEVBQUE7O0VBQ1AsT0FBQSxhQUFNLEtBQUssR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFFLENBQUMsT0FBTyxFQUFDO0dBQ2pDLEVBQUUsRUFBQyxLQUFBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFBO0lBQ1gsT0FBQSxPQUFPLENBQUMsSUFBRyxDQUFDO0lBQUEsTUFDVDtJQUNILE9BQUEsZUFBUSxHQUFHLE9BQU87SUFBQTtHQUFBLENBSkU7RUFJRjs7Q0FFckIsR0FBRyxDQUFDLEtBQUssRUFBQTtFQUNSLE9BQUEsS0FBQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7RUFBQTs7Q0FFTixJQUFJLENBQUMsRUFBRSxDQUFFLEdBQUcsQ0FBSztFQUNwQixPQUFBLEtBQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDO0VBQUE7O0FBQUEsQ0FBQTtBQUFBOyJ9","css":""}