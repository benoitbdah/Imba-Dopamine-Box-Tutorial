{"id":"x","warnings":[],"errors":[],"js":"import {register$} from 'imba/runtime';\nconst $extendType$ = Symbol.for('#extendType'), $options$ = Symbol.for('#options');\n\n/*body*/\n// imba$imbaPath=global\n// imba$stdlib=1\nimport {Event,CustomEvent,Element} from '../dom/core';\nimport * as helpers from './helpers';\n\nexport function use_events_mutate(){\n\tglobalThis.imba.uses_events_mutate = true;\n\treturn true;\n};\n\nlet c$0 = Symbol();\nclass MutationEvent extends CustomEvent {\nstatic { register$(this,c$0,'MutationEvent',0) }};\n\nlet c$1 = Symbol();\nclass Î©Element {\n\ton$mutate(mods,context,handler,opts){\n\t\t// only one observer per element?\n\t\tvar self = this;\n\t\thandler.observer ||= new MutationObserver(function(mutations) {\n\t\t\tlet e = new CustomEvent('mutate',{bubbles: (!(!(mods.bubble))),detail: mutations});\n\t\t\te[$extendType$](MutationEvent);\n\t\t\treturn self.dispatchEvent(e);\n\t\t});\n\t\t\n\t\tlet o = handler[$options$] = {};\n\t\t\n\t\tif (mods.subtree) {\n\t\t\to.subtree = true;\n\t\t};\n\t\t\n\t\tif (mods.childList) {\n\t\t\to.childList = true;\n\t\t};\n\t\t\n\t\tif (mods.attributes) {\n\t\t\to.attributes = true;\n\t\t};\n\t\t\n\t\tif (!(o.attributes) && !(o.childList)) {\n\t\t\to.childList = true;\n\t\t};\n\t\t\n\t\thandler.observer.observe(this,o);\n\t\t\n\t\tthis.addEventListener('mutate',handler,opts);\n\t\treturn handler;\n\t}\n\tstatic { register$(this,c$1,'Element',1,Element); }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXV0YXRlLmltYmEiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtdXRhdGUuaW1iYSJdLCJzb3VyY2VzQ29udGVudCI6WyIjIGltYmEkaW1iYVBhdGg9Z2xvYmFsXG4jIGltYmEkc3RkbGliPTFcbmltcG9ydCB7RXZlbnQsQ3VzdG9tRXZlbnQsRWxlbWVudH0gZnJvbSAnLi4vZG9tL2NvcmUnXG5pbXBvcnQgKiBhcyBoZWxwZXJzIGZyb20gJy4vaGVscGVycydcblxuZXhwb3J0IGRlZiB1c2VfZXZlbnRzX211dGF0ZVxuXHRnbG9iYWwuaW1iYS51c2VzX2V2ZW50c19tdXRhdGUgPSB5ZXNcblx0eWVzXG5cbmNsYXNzIE11dGF0aW9uRXZlbnQgPCBDdXN0b21FdmVudFxuXG5leHRlbmQgY2xhc3MgRWxlbWVudFxuXG5cdGRlZiBvbiRtdXRhdGUobW9kcywgY29udGV4dCwgaGFuZGxlciwgb3B0cylcblx0XHQjIG9ubHkgb25lIG9ic2VydmVyIHBlciBlbGVtZW50P1xuXHRcdGhhbmRsZXIub2JzZXJ2ZXIgfHw9IG5ldyBNdXRhdGlvbk9ic2VydmVyIGRvKG11dGF0aW9ucylcblx0XHRcdGxldCBlID0gbmV3IEN1c3RvbUV2ZW50KCdtdXRhdGUnLCBidWJibGVzOiAoISFtb2RzLmJ1YmJsZSksIGRldGFpbDogbXV0YXRpb25zKVxuXHRcdFx0ZS4jZXh0ZW5kVHlwZShNdXRhdGlvbkV2ZW50KVxuXHRcdFx0c2VsZi5kaXNwYXRjaEV2ZW50KGUpXG5cblx0XHRsZXQgbyA9IGhhbmRsZXIuI29wdGlvbnMgPSB7fVxuXG5cdFx0aWYgbW9kcy5zdWJ0cmVlXG5cdFx0XHRvLnN1YnRyZWUgPSB0cnVlXG5cblx0XHRpZiBtb2RzLmNoaWxkTGlzdFxuXHRcdFx0by5jaGlsZExpc3QgPSB0cnVlXG5cblx0XHRpZiBtb2RzLmF0dHJpYnV0ZXNcblx0XHRcdG8uYXR0cmlidXRlcyA9IHRydWVcblxuXHRcdGlmICFvLmF0dHJpYnV0ZXMgYW5kICFvLmNoaWxkTGlzdFxuXHRcdFx0by5jaGlsZExpc3QgPSB0cnVlXG5cblx0XHRoYW5kbGVyLm9ic2VydmVyLm9ic2VydmUoc2VsZixvKVxuXG5cdFx0c2VsZi5hZGRFdmVudExpc3RlbmVyKCdtdXRhdGUnLGhhbmRsZXIsb3B0cylcblx0XHRyZXR1cm4gaGFuZGxlciJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxNQUFNLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLE9BQU8sYUFBYTtBQUNyRCxNQUFNLENBQUMsQ0FBQyxJQUFJLE9BQU8sTUFBTSxXQUFXOztBQUVwQyxNQUFNLENBQUMsUUFBRyxDQUFDLGlCQUFpQixFQUFBO0NBQzNCLFVBQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBRztDQUNwQyxPQUFBLElBQUc7Q0FBQTs7O0FBRUosS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFDLENBQUMsV0FBVzs7OztBQUUxQixLQUFLLENBQUMsUUFBTyxFQUFBO0NBRWYsU0FBUyxDQUFDLElBQUksQ0FBRSxPQUFPLENBQUUsT0FBTyxDQUFFLElBQUksQ0FBQzs7O0VBRTFDLE9BQU8sQ0FBQyxRQUFRLEtBQUssR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQUUsQ0FBQyxTQUFTLEVBQUM7R0FDbEQsSUFBQSxDQUFDLEdBQUcsR0FBRyxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFHLENBQUEsRUFBQyxFQUFDLElBQUksQ0FBQyxNQUFNLENBQUEsQ0FBQSxDQUFDLENBQUUsTUFBTSxFQUFFLFNBQVMsRUFBQztHQUM5RSxDQUFDLGNBQVksQ0FBQyxhQUFhLENBQUM7R0FDNUIsT0FBQSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztHQUFBLENBSG1COztFQUtyQyxJQUFBLENBQUMsR0FBRyxPQUFPLFdBQVMsR0FBRyxFQUFFOztFQUU3QixFQUFFLEVBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQTtHQUNkLENBQUMsQ0FBQyxPQUFPLEdBQUcsSUFBSTtHQUFBOztFQUVqQixFQUFFLEVBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQTtHQUNoQixDQUFDLENBQUMsU0FBUyxHQUFHLElBQUk7R0FBQTs7RUFFbkIsRUFBRSxFQUFDLElBQUksQ0FBQyxVQUFVLEVBQUE7R0FDakIsQ0FBQyxDQUFDLFVBQVUsR0FBRyxJQUFJO0dBQUE7O0VBRXBCLEVBQUUsRUFBQyxFQUFDLENBQUMsQ0FBQyxVQUFVLENBQUEsQ0FBQyxFQUFHLENBQUMsRUFBQyxDQUFDLENBQUMsU0FBUyxDQUFBLEVBQUE7R0FDaEMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxJQUFJO0dBQUE7O0VBRW5CLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7O0VBRWhDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztFQUM1QyxNQUFNLENBQUMsT0FBTztFQUFBO3lDQTFCSCxPQUFPLENBQUEsQ0FBQTtBQTBCSixDQUFBO0FBQUE7In0=","css":""}