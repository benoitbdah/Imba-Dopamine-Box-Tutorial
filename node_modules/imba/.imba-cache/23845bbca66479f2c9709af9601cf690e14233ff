{"id":"v","warnings":[],"errors":[],"js":"// @ts-ignore\nfunction isa$(a,b){ return typeof b === \"string\" ? (typeof a === b) : b[Symbol.hasInstance]?.(a) };\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };\nimport {register$} from 'imba/runtime';\n\n/*body*/\n// imba$stdlib=1\nimport {commit} from './scheduler';\n\nconst fn = function() { return true; };\n\n// Return functions to allow calling the storage for nesting.\nfunction storetarget(){\n\treturn function() { return true; };\n};\n\nlet c$0 = Symbol();\nclass Storage {\n\t\n\tconstructor(store,ns = ''){\n\t\tthis.store = store || {};\n\t\tthis.cache = {raw: {},rich: {}};\n\t\tthis.ns = ns;\n\t\tthis.local = store == globalThis.sessionStorage;\n\t\tthis.children = new Map;\n\t}\n\t\n\tserialize(val,key){\n\t\treturn JSON.stringify(val);\n\t}\n\t\n\tdeserialize(val,key){\n\t\treturn JSON.parse(val);\n\t}\n\t\n\tgetItem(name){\n\t\tlet key = String(this.ns) + ':' + name;\n\t\t\n\t\tif (isa$(this.store,Storage)) {\n\t\t\treturn this.store.getItem(key);\n\t\t};\n\t\t\n\t\tif (this.local && this.cache.rich[key] != undefined) {\n\t\t\treturn this.cache.rich[key];\n\t\t};\n\t\t\n\t\tlet raw = this.store.getItem(key);\n\t\t// if we are\n\t\tif (raw != undefined) {\n\t\t\tif (this.cache.raw[key] == raw) {\n\t\t\t\treturn this.cache.rich[key];\n\t\t\t};\n\t\t\t\n\t\t\tthis.cache.raw[key] = raw;\n\t\t\treturn this.cache.rich[key] = this.deserialize(raw,key);\n\t\t};\n\t}\n\t\n\tsetItem(name,value){\n\t\tvar $1, $2;\n\t\tlet key = String(this.ns) + ':' + name;\n\t\t\n\t\tif (isa$(this.store,Storage)) {\n\t\t\treturn this.store.setItem(key,value);\n\t\t};\n\t\t\n\t\tlet cached = this.cache.rich[key];\n\t\tlet typ = typeof value;\n\t\t\n\t\tif (this.local) {\n\t\t\tthis.cache.rich[key] = value;\n\t\t};\n\t\t\n\t\tif (cached !== value || typ == 'object') {\n\t\t\tlet prev = this.store.getItem(key);\n\t\t\t\n\t\t\tif (value == undefined) {\n\t\t\t\tthis.store.removeItem(key);\n\t\t\t\t((($1 = this.cache.rich[key]),delete this.cache.rich[key], $1));\n\t\t\t\t((($2 = this.cache.raw[key]),delete this.cache.raw[key], $2));\n\t\t\t\treturn commit();\n\t\t\t} else {\n\t\t\t\tlet raw = this.serialize(value,key);\n\t\t\t\tthis.cache.rich[key] = value;\n\t\t\t\tthis.cache.raw[key] = raw;\n\t\t\t\t\n\t\t\t\tif (prev != raw) {\n\t\t\t\t\tthis.store.setItem(key,raw);\n\t\t\t\t\treturn commit();\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\t\n\tremoveItem(name){\n\t\tvar $3;\n\t\tlet key = String(this.ns) + ':' + name;\n\t\t((($3 = this.cache[key]),delete this.cache[key], $3));\n\t\treturn this.store.removeItem(key);\n\t}\n\t\n\tget(target,key,receiver){\n\t\treturn this.getItem(key);\n\t}\n\t\n\tset(target,key,value,receiver){\n\t\tthis.setItem(key,value);\n\t\treturn true;\n\t}\n\t\n\tapply(target,that,[name]){\n\t\tlet item = this.children.get(name);\n\t\titem || this.children.set(name,item = new Proxy(storetarget(),new Storage(this,name)));\n\t\treturn item;\n\t}\n\t\n\tdeleteProperty(target,name){\n\t\tthis.removeItem(name);\n\t\treturn true;\n\t}\n\t\n\townKeys(target){\n\t\tlet keys = ['prototype'];\n\t\tlet key = this.ns + ':';\n\t\tfor (let $4 = 0, $5 = iter$__(Object.keys(this.store)), $6 = $5.length; $4 < $6; $4++) {\n\t\t\tlet k = $5[$4];\n\t\t\tif (k.indexOf(key) == 0) {\n\t\t\t\tkeys.push(k.slice(key.length));\n\t\t\t};\n\t\t};\n\t\treturn keys;\n\t}\n\tstatic { register$(this,c$0,'Storage',16) }\n};\n\nexport const locals = new Proxy(storetarget(),new Storage(globalThis.localStorage));\nexport const session = new Proxy(storetarget(),new Storage(globalThis.sessionStorage));\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}